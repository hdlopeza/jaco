# Note: You can use any Debian/Ubuntu based image you want. 
FROM docker.io/tensorflow/tensorflow:latest

# [Option] Install zsh
ARG INSTALL_ZSH="true"
# [Option] Upgrade OS packages to their latest versions
ARG UPGRADE_PACKAGES="false"
# [Option] Enable non-root Docker access in container
ARG ENABLE_NONROOT_DOCKER="true"
# [Option] Use the OSS Moby CLI instead of the licensed Docker CLI
ARG USE_MOBY="true"

# Enable new "BUILDKIT" mode for Docker CLI
ENV DOCKER_BUILDKIT=1

# Install needed packages and setup non-root user. Use a separate RUN statement to add your
# own dependencies. A user of "automatic" attempts to reuse an user ID if one already exists.
ARG USERNAME=automatic
ARG USER_UID=1000
ARG USER_GID=$USER_UID
COPY library-scripts/*.sh /tmp/library-scripts/
RUN apt-get update \
    && /bin/bash /tmp/library-scripts/common-debian.sh "${INSTALL_ZSH}" "${USERNAME}" "${USER_UID}" "${USER_GID}" "${UPGRADE_PACKAGES}" "true" "true" \
    # Use Docker script from script library to set things up
    && /bin/bash /tmp/library-scripts/docker-debian.sh "${ENABLE_NONROOT_DOCKER}" "/var/run/docker-host.sock" "/var/run/docker.sock" "${USERNAME}" \
    # Clean up
    && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/library-scripts/

# # Opencv opcion1
RUN apt-get update
RUN apt-get install ffmpeg libsm6 libxext6 -y

# Python dependencies
RUN pip3 install --upgrade pip \
    numpy matplotlib pytesseract pdf2image \
    tinydb pandas imutils ipykernel \
    opencv-python \
    protobuf-compiler six pillow


# --------------

# # object_detection tensorflow api
# # Install apt dependencies
# RUN apt-get install -y \
#     gpg-agent \
#     python3-cairocffi \
#     protobuf-compiler \
#     python3-pil \
#     python3-lxml \
#     python3-tk \
#     wget

# # Install gcloud and gsutil commands


# # Add new user to avoid running as root
# # RUN useradd -ms /bin/bash tensorflow
# # USER tensorflow
# WORKDIR /home/tensorflow

# # Copy this version of of the model garden into the image
# RUN git clone https://github.com/tensorflow/models.git /home/tensorflow/models
# # COPY --chown=tensorflow . /home/tensorflow/models

# # Compile protobuf configs
# # RUN (cd /home/tensorflow/models/research/ && protoc object_detection/protos/*.proto --python_out=.)
# WORKDIR /home/tensorflow/models/research/

# RUN cp object_detection/packages/tf2/setup.py ./
# ENV PATH="/home/tensorflow/.local/bin:${PATH}"

# RUN python -m pip install -U pip
# RUN python -m pip install .

# ENV TF_CPP_MIN_LOG_LEVEL 3

# --------------

# Setting the ENTRYPOINT to docker-init.sh will configure non-root access 
# to the Docker socket. The script will also execute CMD as needed.
ENTRYPOINT [ "/usr/local/share/docker-init.sh" ]
CMD [ "sleep", "infinity" ]

# [Optional] Uncomment this section to install additional OS packages.
# RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
#     && apt-get -y install --no-install-recommends <your-package-list-here>
